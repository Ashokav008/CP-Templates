#include <bits/stdc++.h>
using namespace std;
int arr[100005], seg[4*100005];

void build(int ind, int low, int high){
    
    if(low==high){
        seg[ind]=arr[low];
        return;
    }
    int mid=(low+high)/2;
    build(2*ind+1, low,mid);
    build(2*ind+2, mid+1,high);
    
    seg[ind]=max(seg[2*ind+1],seg[2*ind+2]);
    
}

int query(int ind, int low , int high, int l, int r){
    //completely lies
    if(low>=l and high<=r)
        return seg[ind];
    //never lies
    if(high<l or low>r)
        return INT_MIN;
    
    //partially lies
    int mid=(low+high)/2;
    int left=query(2*ind+1, low,mid,l,r);
    int right=query(2*ind+2, mid+1,high,l,r);
    // cout<<max(left,right)<<endl;
    
    return max(left, right);
}

int main() {

    int n,q;
   
    n=10,q=1;
    
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
         //ind , low, high
    build(0,0,n-1);  //build the segment tree
    for(int i=0;i<4*n+4;i++){
        cout<<seg[i]<<"   ";
    }
    cout<<endl;
    while(q--){
        
        int l,r;
        cin>>l>>r; //ind, low,high, l,r;
        cout<<query(0, 0,n-1, l,r)<<endl;
        // cout<<"print "<<l<<"  "<<r<<endl;
        
    }
    return 0;
}